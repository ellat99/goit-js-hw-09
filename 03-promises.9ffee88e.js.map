{"mappings":"YAAA,SAASA,EAAcC,EAAUC,GAG/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIH,SAAKQ,EAAaC,G,IAASC,EAAAC,UAAAC,OAAA,YAAAD,UAAA,GAAaA,UAAA,GAAN,OAC9BE,EAAWC,SAASC,eAAe,YACzCF,EAASG,YAAcP,EACvBI,EAASI,MAAMC,gBAA2B,UAATR,EAAmB,UAAY,OAChEG,EAASI,MAAME,QAAU,QAGxBZ,YAAU,WACTM,EAASI,MAAME,QAAU,M,GACxB,I,UAMDC,iBAAK,oBAAiB,WACxB,IAAMC,EAAOP,SAASQ,cAAc,SAEpCD,EAAKD,iBAAiB,UAAU,SAAUG,GACxCA,EAAMC,iBAMD,IAJL,IAAMC,EAAaC,SAASL,EAAKM,SAAgB,MAAEC,OAC7CC,EAAOH,SAASL,EAAKM,SAAe,KAAEC,OACtCE,EAASJ,SAASL,EAAKM,SAAiB,OAAEC,OAEvCG,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAI/BjC,EAHiBiC,EAAI,EACAN,EAAaM,EAAIF,GAGnCG,MAAK,SAAAC,G,IAAGlC,EAAQkC,EAARlC,SAAUC,EAAKiC,EAALjC,MAEfQ,EADuB,uBAAwC0B,OAAfnC,EAAS,QAAYmC,OAANlC,EAAM,MACxC,O,IAEhCmC,OAAM,SAAAF,G,IAAGlC,EAAQkC,EAARlC,SAAUC,EAAKiC,EAALjC,MAElBQ,EADwB,sBAAqC0B,OAAfnC,EAAS,QAAYmC,OAANlC,EAAM,MACrC,Q","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  //returneaza un obiect care accepta sau respinge in functie de shouldResolve\n  //aici probabilitatea este de 70% sa accepte\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    //am folosit setTimeout pt a simula actiunea asincrona si pentru a intarzia rezolvarea sau respingerea promisiunii\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n//afișează un \"snackbar\" (o notificare temporară) în pagina web.\nfunction showSnackbar(message, type = 'info') {\n  const snackbar = document.getElementById('snackbar');\n  snackbar.textContent = message;\n  snackbar.style.backgroundColor = type === 'error' ? '#ff3333' : '#333';\n  snackbar.style.display = 'block';\n\n  // Ascunde snackbar-ul după 3 secunde\n  setTimeout(() => {\n    snackbar.style.display = 'none';\n  }, 3000);\n}\n/**Utilizarea evenimentului DOMContentLoaded este utilă atunci când dorești să te asiguri că codul\n * JavaScript se execută doar după ce întregul DOM este pregătit pentru manipulare, evitând astfel\n * situații în care elementele DOM pe care încerci să le selectezi și să le manipulezi nu au fost\n * încă create sau încărcate. */\ndocument.addEventListener('DOMContentLoaded', function () {\n  const form = document.querySelector('.form');\n\n  form.addEventListener('submit', function (event) {\n    event.preventDefault();\n\n    const firstDelay = parseInt(form.elements['delay'].value);\n    const step = parseInt(form.elements['step'].value);\n    const amount = parseInt(form.elements['amount'].value);\n    //Un loop for creează și gestionează promise-urile utilizând funcția createPromise.\n    for (let i = 0; i < amount; i++) {\n      const position = i + 1;\n      const currentDelay = firstDelay + i * step;\n\n      createPromise(position, currentDelay)\n        .then(({ position, delay }) => {\n          const fulfilledMessage = `✅ Fulfilled promise ${position} in ${delay}ms`;\n          showSnackbar(fulfilledMessage, 'info');\n        })\n        .catch(({ position, delay }) => {\n          const rejectedMessage = `❌ Rejected promise ${position} in ${delay}ms`;\n          showSnackbar(rejectedMessage, 'error');\n        });\n    }\n  });\n});\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$showSnackbar","message","type","arguments","length","snackbar","document","getElementById","textContent","style","backgroundColor","display","addEventListener","form","querySelector","event","preventDefault","firstDelay","parseInt","elements","value","step","amount","i","then","param","concat","catch"],"version":3,"file":"03-promises.9ffee88e.js.map"}