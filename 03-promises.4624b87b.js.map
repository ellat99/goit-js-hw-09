{"mappings":"AAAA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIb,SAASQ,EAAiBC,GAClB,iBAAkBC,OAKQ,YAA5BC,aAAaC,WACf,IAAID,aAAa,uBAAwB,CAAEE,KAAMJ,IACZ,WAA5BE,aAAaC,YACtBD,aAAaG,oBAAoBC,MAAKH,IACjB,YAAfA,GACF,IAAID,aAAa,uBAAwB,CAAEE,KAAMJ,GAAU,IAT/DO,QAAQC,MAAM,qD,CAelBC,SAASC,iBAAiB,oBAAoB,WAC5C,MAAMC,EAAOF,SAASG,cAAc,SAEpCD,EAAKD,iBAAiB,UAAU,SAAUG,GACxCA,EAAMC,iBAEN,MAAMC,EAAaC,SAASL,EAAKM,SAAgB,MAAEC,OAC7CC,EAAOH,SAASL,EAAKM,SAAe,KAAEC,OACtCE,EAASJ,SAASL,EAAKM,SAAiB,OAAEC,OAEhD,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAI/BhC,EAHiBgC,EAAI,EACAN,EAAaM,EAAIF,GAGnCb,MAAK,EAAChB,SAAEA,EAAQC,MAAEA,MAEfQ,EADuB,uBAAqBT,QAAiBC,MAC7B,IAEnC+B,OAAM,EAAChC,SAAEA,EAAQC,MAAEA,MAElBQ,EADwB,sBAAoBT,QAAeC,MAC1B,G","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction showNotification(message) {\n  if (!('Notification' in window)) {\n    console.error('This browser does not support desktop notification');\n    return;\n  }\n\n  if (Notification.permission === 'granted') {\n    new Notification('Promise Notification', { body: message });\n  } else if (Notification.permission !== 'denied') {\n    Notification.requestPermission().then(permission => {\n      if (permission === 'granted') {\n        new Notification('Promise Notification', { body: message });\n      }\n    });\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  const form = document.querySelector('.form');\n\n  form.addEventListener('submit', function (event) {\n    event.preventDefault();\n\n    const firstDelay = parseInt(form.elements['delay'].value);\n    const step = parseInt(form.elements['step'].value);\n    const amount = parseInt(form.elements['amount'].value);\n\n    for (let i = 0; i < amount; i++) {\n      const position = i + 1;\n      const currentDelay = firstDelay + i * step;\n\n      createPromise(position, currentDelay)\n        .then(({ position, delay }) => {\n          const fulfilledMessage = `✅ Fulfilled promise ${position} in ${delay}ms`;\n          showNotification(fulfilledMessage);\n        })\n        .catch(({ position, delay }) => {\n          const rejectedMessage = `❌ Rejected promise ${position} in ${delay}ms`;\n          showNotification(rejectedMessage);\n        });\n    }\n  });\n});\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$showNotification","message","window","Notification","permission","body","requestPermission","then","console","error","document","addEventListener","form","querySelector","event","preventDefault","firstDelay","parseInt","elements","value","step","amount","i","catch"],"version":3,"file":"03-promises.4624b87b.js.map"}